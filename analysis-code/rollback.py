#!/usr/bin/python3

'''
    This script works out the SHA hash for each Qualitas app 
    on a particular date between 1995 and 2017.
    It generates a shell script that (when run) will do the rollback.
'''

from datetime import date
import os

import qualitas

from git import Repo
from git.exc import InvalidGitRepositoryError


def get_date(year):
    ''' This is the date you want to roll back to '''
    return date(year, 12, 31)   # 31st Dec


def get_version(appname, seeking_date):
    ''' Return the (hash of the) commit just before the given date '''
    try:
        repo = Repo(qualitas.file_for(appname))
    except InvalidGitRepositoryError as err:
        print(err)
        return None
    for c in repo.iter_commits(repo.head):
        current_date = date.fromtimestamp(c.committed_date)
        if current_date <= seeking_date:
            return str(c)
    # If we get here then nothing was found, so...
    return None

           
def print_a_reset(appname, sha):
    srcdir = qualitas.file_for(appname)
    return '\n'.join([
        'echo {}'.format(appname),
        'cp -r {} .'.format(srcdir),
        'cd {}; git reset --hard {}; cd ..'.format(appname, sha),
    ])
 
def print_all_resets(year, apps):
    seek_date = get_date(year)
    print('echo Versions at {}'.format(seek_date))
    targetdir = qualitas.corpus_for_year(year, 12, 31)
    print('mkdir -p {}'.format(targetdir))
    print('pushd {}'.format(targetdir))
    for appname in apps:
        sha = get_version(appname, seek_date)
        if sha:
            print(print_a_reset(appname, sha))
    print('popd', end='\n\n')
    print()
   
# Just testing
if __name__ == '__main__':
    apps = qualitas.get_dirnames()
    print('### Generated by {} on {}\n\n'.format(__file__, date.today()))
    for year in range(2017,2018):
        print_all_resets(year, apps)
